{"version":3,"sources":["components/task-1/Profile.module.css","components/task-3/FriendList.module.css","components/task-2/Statistics.module.css","components/task-4/TransactionHistory.module.css","components/task-1/Profile.js","components/task-2/randomeColor.js","components/task-2/Statistics.js","components/task-3/FriendListItem.js","components/task-3/FriendList.js","components/task-4/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","s","profile","description","src","alt","statsItem","label","quantity","randomColor","Math","random","toString","substring","Statistics","title","statistics","statList","map","stat","id","percentage","item","style","backgroundColor","defaultProps","proppTypes","PropTypes","string","isRequired","arrayOf","shape","number","FriendListItem","isOnline","statusOnline","statusOffline","width","FriendList","friends","friendList","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a86a184.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1_SZ0\",\"description\":\"Profile_description__97EU5\",\"avatar\":\"Profile_avatar__1X9mp\",\"name\":\"Profile_name__2EDOi\",\"tag\":\"Profile_tag__2WnzJ\",\"location\":\"Profile_location__vAA4O\",\"stats\":\"Profile_stats__1bGRv\",\"statsItem\":\"Profile_statsItem__3o2QC\",\"label\":\"Profile_label__2viR1\",\"quantity\":\"Profile_quantity__23sur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3w4FM\",\"item\":\"FriendList_item__3oqXo\",\"span\":\"FriendList_span__2OhWu\",\"statusOnline\":\"FriendList_statusOnline__2mgxU FriendList_span__2OhWu\",\"statusOffline\":\"FriendList_statusOffline__3mThn FriendList_span__2OhWu\",\"avatar\":\"FriendList_avatar__17xJs\",\"name\":\"FriendList_name__t9KsI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1zATC\",\"title\":\"Statistics_title__3mobq\",\"statList\":\"Statistics_statList__2p2h6\",\"item\":\"Statistics_item__1RcQ2\",\"label\":\"Statistics_label__US8V_\",\"percentage\":\"Statistics_percentage__3bS21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__xa2dQ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  const { followers, views, likes } = stats;\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt={name} className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li className={s.statsItem}>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{followers}</span>\r\n        </li>\r\n        <li className={s.statsItem}>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{views}</span>\r\n        </li>\r\n        <li className={s.statsItem}>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\nexport default Profile;\r\n","const randomColor = () => {\r\n  return '#' + Math.random().toString(16).substring(9);\r\n};\r\n\r\nexport default randomColor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\nimport randomColor from './randomeColor';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s.statList}>\r\n        {stats.map(stat => {\r\n          const { id, label, percentage } = stat;\r\n\r\n          return (\r\n            <li\r\n              className={s.item}\r\n              key={id}\r\n              style={{ backgroundColor: randomColor() }}\r\n            >\r\n              <span className={s.label}>{label}</span>\r\n              <span className={s.percentage}>{percentage}%</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.proppTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => (\r\n  <>\r\n    <span className={isOnline ? s.statusOnline : s.statusOffline}></span>\r\n    <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n    <p className={s.name}>{name}</p>\r\n  </>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\nimport FriendListItem from './FriendListItem';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={s.friendList}>\r\n    {friends.map(({ id, avatar, name, isOnline }) => (\r\n      <li key={id} className={s.item}>\r\n        <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={s.transactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(item => {\r\n        const { id, type, amount, currency } = item;\r\n        return (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\n\nimport user from './task-1/user.json';\nimport Profile from './task-1/Profile.js';\n\nimport Statistics from './task-2/Statistics';\nimport statisticalData from './task-2/statistical-data.json';\n\nimport friends from './task-3/friends.json';\nimport FriendList from './task-3/FriendList';\n\nimport transactions from './task-4/transactions.json';\nimport TransactionHistory from './task-4/TransactionHistory';\n\nconst App = () => {\n  return (\n    <>\n      <h2>Task-1</h2>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <h2>Task-2</h2>\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <h2>Task-3</h2>\n      <FriendList friends={friends} />\n      <h2>Task-4</h2>\n      <TransactionHistory items={transactions} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}